{"ast":null,"code":"var _jsxFileName = \"/home/akshajkanumuri/GitHub/VS-Code-Projects/Web Development/Chat Application/src/components/Input.jsx\",\n  _s = $RefreshSig$();\nimport { async } from \"@firebase/util\";\nimport { arrayUnion, doc, serverTimestamp, setDoc, updateDoc } from \"firebase/firestore\";\nimport React, { useContext, useDebugValue, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport Img from \"./img/image.png\";\nimport Attach from \"./img/paper-clip.png\";\nimport { v4 as uuid } from \"uuid\";\nimport { Timestamp } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { updateProfile } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      uploadTask.on(error => {}, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    setText(\"\");\n    setImg(null);\n  };\n  const handleKey = e => {\n    e.code === \"Enter\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type something...\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Attach,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"n/+Ui6tOy2zfUr7frsfWFpGxphI=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["async","arrayUnion","doc","serverTimestamp","setDoc","updateDoc","React","useContext","useDebugValue","useState","AuthContext","ChatContext","Img","Attach","v4","uuid","Timestamp","db","storage","getDownloadURL","ref","uploadBytesResumable","updateProfile","jsxDEV","_jsxDEV","Input","_s","text","setText","img","setImg","currentUser","data","handleSend","storageRef","uploadTask","on","error","snapshot","then","downloadURL","chatId","messages","id","senderId","uid","date","now","user","handleKey","e","code","className","children","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","display","files","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/home/akshajkanumuri/GitHub/VS-Code-Projects/Web Development/Chat Application/src/components/Input.jsx"],"sourcesContent":["import { async } from \"@firebase/util\";\nimport { arrayUnion, doc, serverTimestamp, setDoc, updateDoc } from \"firebase/firestore\";\nimport React, { useContext, useDebugValue, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport Img from \"./img/image.png\"\nimport Attach from \"./img/paper-clip.png\"\nimport { v4 as uuid } from \"uuid\";\nimport { Timestamp } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst Input = () => {\n    const [ text, setText] = useState(\"\");\n    const [ img, setImg] = useState(null);\n\n    const {currentUser} = useContext(AuthContext);\n    const {data} = useContext(ChatContext);\n    \n    const handleSend = async () => {\n         \n        if(img){\n            const storageRef = ref(storage, uuid());\n\n            const uploadTask = uploadBytesResumable(storageRef, img);\n\n            uploadTask.on(\n                (error) => {\n                    \n                },\n                () => {\n                    getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n                        await updateDoc(doc(db, \"chats\", data.chatId), {\n                            messages: arrayUnion({\n                                id: uuid(),\n                                text,\n                                senderId: currentUser.uid,\n                                date: Timestamp.now(),\n                                img: downloadURL\n                            }),\n                        });\n                    })\n                }\n            )\n        }\n        else{\n            await updateDoc(doc(db, \"chats\", data.chatId), {\n                messages: arrayUnion({\n                    id: uuid(),\n                    text,\n                    senderId: currentUser.uid,\n                    date: Timestamp.now(),\n                }),\n            });\n        }\n\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n            [data.chatId + \".lastMessage\"]:{\n                text\n            },\n            [data.chatId + \".date\"]:serverTimestamp()\n        });\n\n        await updateDoc(doc(db, \"userChats\", data.user.uid), {\n            [data.chatId + \".lastMessage\"]:{\n                text\n            },\n            [data.chatId + \".date\"]:serverTimestamp()\n        });\n\n        setText(\"\");\n        setImg(null);\n    };\n\n    const handleKey = (e) => {\n        e.code === \"Enter\";\n    }\n    \n    return (\n        <div className=\"input\">\n            <input type=\"text\" placeholder=\"Type something...\" onChange={e=>setText(e.target.value)} value={text}/>\n            <div className=\"send\">\n                <img src={Attach} alt=\"\" />\n                <input type=\"file\" style={{display:\"none\"}} id=\"file\" onChange={e=>setImg(e.target.files[0])}/>\n                <label htmlFor=\"file\">\n                    <img src={Img} alt=\"\" />\n                </label>\n                <button onClick={handleSend}>Send</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Input"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}