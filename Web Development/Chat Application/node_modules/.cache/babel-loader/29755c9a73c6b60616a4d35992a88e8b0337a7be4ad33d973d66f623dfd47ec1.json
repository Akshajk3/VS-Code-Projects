{"ast":null,"code":"import _slicedToArray from\"/Users/kashyapkanumuri/Documents/GitHub/VS-Code-Projects/Web Development/Chat Application/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useContext,useReducer}from\"react\";import{AuthContext}from\"./AuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ChatContext=/*#__PURE__*/createContext();export var ChatContextProvider=function ChatContextProvider(_ref){var children=_ref.children;var _useContext=useContext(AuthContext),currentUser=_useContext.currentUser;var INITIAL_STATE={chatId:\"null\",user:{}};var chatReducer=function chatReducer(state,action){switch(action.type){case\"CHANGE_USER\":return{user:action.payload,chatId:currentUser.uid>action.payload.uid?currentUser.uid+action.payload.uid:action.payload.uid+currentUser.uid};default:return state;}};var _useReducer=useReducer(chatReducer,INITIAL_STATE),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(ChatContext.Provider,{value:{data:state,dispatch:dispatch},children:children});};","map":{"version":3,"names":["createContext","useContext","useReducer","AuthContext","jsx","_jsx","ChatContext","ChatContextProvider","_ref","children","_useContext","currentUser","INITIAL_STATE","chatId","user","chatReducer","state","action","type","payload","uid","_useReducer","_useReducer2","_slicedToArray","dispatch","Provider","value","data"],"sources":["/Users/kashyapkanumuri/Documents/GitHub/VS-Code-Projects/Web Development/Chat Application/src/context/ChatContext.js"],"sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\n\nexport const ChatContext = createContext();\n\nexport const ChatContextProvider = ({ children }) => {\n    const {currentUser} = useContext(AuthContext)\n    const INITIAL_STATE = {\n        chatId: \"null\",\n        user:{}\n    };\n\n    const chatReducer = (state, action) => {\n        switch(action.type){\n            case \"CHANGE_USER\":\n                return{\n                    user: action.payload,\n                    chatId: currentUser.uid > action.payload.uid ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid,\n\n                };\n\n                default:\n                    return state;\n        }\n    };\n\n    const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n\n  return (\n    <ChatContext.Provider value={{ data:state, dispatch }}>\n      {children}\n    </ChatContext.Provider>\n  );\n};"],"mappings":"+KAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,UAAU,KAAQ,OAAO,CAC7D,OAASC,WAAW,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,MAAO,IAAM,CAAAC,WAAW,cAAGN,aAAa,EAAE,CAE1C,MAAO,IAAM,CAAAO,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAAC,IAAA,CAAqB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAC1C,IAAAC,WAAA,CAAsBT,UAAU,CAACE,WAAW,CAAC,CAAtCQ,WAAW,CAAAD,WAAA,CAAXC,WAAW,CAClB,GAAM,CAAAC,aAAa,CAAG,CAClBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAC,CAAC,CACV,CAAC,CAED,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,KAAK,CAAEC,MAAM,CAAK,CACnC,OAAOA,MAAM,CAACC,IAAI,EACd,IAAK,aAAa,CACd,MAAM,CACFJ,IAAI,CAAEG,MAAM,CAACE,OAAO,CACpBN,MAAM,CAAEF,WAAW,CAACS,GAAG,CAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,CAAGT,WAAW,CAACS,GAAG,CAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,CAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,CAAGT,WAAW,CAACS,GAE3H,CAAC,CAED,QACI,MAAO,CAAAJ,KAAK,CAAC,CAE7B,CAAC,CAED,IAAAK,WAAA,CAA0BnB,UAAU,CAACa,WAAW,CAAEH,aAAa,CAAC,CAAAU,YAAA,CAAAC,cAAA,CAAAF,WAAA,IAAzDL,KAAK,CAAAM,YAAA,IAAEE,QAAQ,CAAAF,YAAA,IAExB,mBACEjB,IAAA,CAACC,WAAW,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEC,IAAI,CAACX,KAAK,CAAEQ,QAAQ,CAARA,QAAS,CAAE,CAAAf,QAAA,CACnDA,QAAQ,EACY,CAE3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}